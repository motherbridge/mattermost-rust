/*
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TopThread {
    #[serde(rename = "post", skip_serializing_if = "Option::is_none")]
    pub post: Option<Box<crate::models::Post>>,
    #[serde(rename = "channel_id", skip_serializing_if = "Option::is_none")]
    pub channel_id: Option<String>,
    #[serde(rename = "channel_display_name", skip_serializing_if = "Option::is_none")]
    pub channel_display_name: Option<String>,
    #[serde(rename = "channel_name", skip_serializing_if = "Option::is_none")]
    pub channel_name: Option<String>,
    #[serde(rename = "Participants", skip_serializing_if = "Option::is_none")]
    pub participants: Option<Vec<String>>,
    #[serde(rename = "user_information", skip_serializing_if = "Option::is_none")]
    pub user_information: Option<Box<crate::models::InsightUserInformation>>,
}

impl TopThread {
    pub fn new() -> TopThread {
        TopThread {
            post: None,
            channel_id: None,
            channel_display_name: None,
            channel_name: None,
            participants: None,
            user_information: None,
        }
    }
}


